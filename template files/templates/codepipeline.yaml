Description: "AWS CodePipeline for ECS Deployment"

Parameters:
  ECSAppName: { Type: String }
  ECRRepoName: { Type: String }
  ContainerName: { Type: String }
  ContainerPort: { Type: Number }
  TaskDefinitionArn: { Type: String }
  CodeDeployApplication: { Type: String }
  CodeDeployServiceRoleArn: { Type: String }
  # ArtifactsBucketName: { Type: String }
  ECSClusterName: { Type: String }
  ECSServiceName: { Type: String }

Resources:
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub codepipeline-${ECSAppName}
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: { Service: codepipeline.amazonaws.com }
            Action: sts:AssumeRole
      Policies:
        - PolicyName: PipelinePermissions
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - ecr:DescribeImages
                  - ecr:GetDownloadUrlForLayer
                  - ecr:GetAuthorizationToken
                  - ecr:BatchCheckLayerAvailability
                  - codeDeploy:*
                Resource: "*"

              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                  - s3:ListBucket
                Resource:
                  - !Sub arn:aws:s3:::${ArtifactsBucketName}
                  - !Sub arn:aws:s3:::${ArtifactsBucketName}/*

              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
                  - s3:ListBucket
                  - s3:PutObject
                Resource:
                  - !Sub arn:aws:s3:::taskman-prod-${AWS::AccountId}/*
                  - !Sub arn:aws:s3:::taskman-prod-${AWS::AccountId}

              - Effect: Allow
                Action: iam:PassRole
                Resource: !Ref CodeDeployServiceRoleArn

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub ${ECSAppName}-deployment
      RoleArn: !GetAtt PipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Sub taskman-prod-${AWS::AccountId}
      Stages:
        - Name: Source
          Actions:
            - Name: S3_Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: S3
                Version: '1'
              Configuration:
                S3Bucket: !Sub taskman-prod-${AWS::AccountId}
                S3ObjectKey: deployment-files.zip
                PollForSourceChanges: false
              OutputArtifacts:
                - Name: SourceOutput
              RunOrder: 1

        - Name: Deploy
          Actions:
            - Name: CodeDeploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CodeDeploy
                Version: '1'
              Configuration:
                ApplicationName: !Ref CodeDeployApplication
                DeploymentGroupName: !Sub ${ECSAppName}-dg
              InputArtifacts:
                - Name: SourceOutput
              RunOrder: 1

Outputs:
  PipelineName:
    Value: !Ref Pipeline